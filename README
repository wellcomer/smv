
 smart mv или sysadmin's mv. mv с помощниками.

 smv [-d char|-n|-i|-p|-q|-v|-m flags|-h helper] SOURCE_PATTERN DESTINATION_PATTERN

 -d, --delimiter        символ разделителя для destination_pattern (по умолчанию %)
 -n, --dry-run          холостой запуск
 -h, --helper           имя хелпера
 -i, --ignore-case      игнорировать регистр символов в source_pattern
 -m, --mv-flags         флаги mv
 -p, --make-path        создать выходной путь (каталог) для файла
 -q, --quiet            тихий режим (не показывать имена файлов)
 -v, --verbose          детальный вывод
 -h, --help             справка

 Принцип работы:

 Для каждого файла, который совпадает с шаблоном SOURCE_PATTERN запустить программу
 указанную ключом --helper, передать ей полный путь к файлу. Считать первую строку
 из stdout хелпера, разделить на слова, в качестве  разделителя использовать пробел.
 Заполнить массив переменных полученными значениями. В DESTINATION_PATTERN
 найти переменные и заменить их значениями. Если указан ключ --make-path,
 создать каталог(и). Запустить mv с флагами указанными ключом --mv-flags.

 SOURCE_PATTERN может быть полным именем файла или каталога, а также включать в себя
 shell wildcards (в этом случае шаблон должен быть экранирован кавычками).

 Переменные в DESTINATION_PATTERN:

 %@% - полная (первая) строка (stdout) хелпера.
 %~% - каталог файла
 %0% - имя файла с расширением
 %$% - расширение файла
 %1%...%N% - номер слова (слово - набор символов разделенных пробелом)
 %#% - последнее слово строки

 Пример значений переменных после запуска хелпера md5sum с файлом /tmp/hello.txt:

 %@% = c6c681709a7030b3670142592520e129 /tmp/hello.txt (строка целиком)
 %~% = /tmp
 %0% = hello.txt
 %$% = .txt
 %1% = c6c681709a7030b3670142592520e129 (первое слово)
 %2% = /tmp/hello.txt (второе слово)
 %#% = /tmp/hello.txt (последнее оно же второе слово)

 Смещения:

 Если необходимо выделить часть значения переменной, можно указать смещение после запятой:
 первая цифра после запятой - стартовая позиция (отсчет идет с 1 символа),
 вторая - длина фрагмента.

 Формат: %имя_переменной,старт,длина%

 Пример:

 %0,2,2% = el
 %$,1,1% = .

 Отладка:

 Для детального рассмотрения этапов работы, значений и результатов подстановки переменных,
 используйте ключи -n -v.

 Примеры использования:

 Перемещение файла в каталог формата yyyy/mm/dd в зависимости от времени изменения файла:

 smv -ph 'stat -c %y' filename %1,1,4%/%1,6,2%/%1,9,2%/%0

 переименовать все файлы с расширением .txt в md5 хэш:

 smv -h md5sum '*.txt' %1%.txt или
 smv -h md5sum '*.txt' %1%$

 Рекурсивное переименование всех .txt файлов в /tmp в .dat

 find /tmp -name '*.txt' -exec smv -h 'basename -s .txt' {} %~%/%1%.dat \;

 Скрипт сортировки *.txt файлов по каталогам год/месяц изменения файла:

 #!/bin/sh
 wd=/home/samba/all-msg/arc
 /usr/local/bin/smv -ph 'stat -c %y' $wd/'*.txt' $wd/%1,1,4%/%1,6,2%/%0

 Exit коды:

 0 - Удачное завершение

 #define EXIT_ERR_NOT_FOUND 1
 Исходный файл не найден

 #define EXIT_ERR_HELPER_FAILED 2
 Ошибка запуска хелпера

 #define EXIT_ERR_BAD_PATTERN
 Ошибки в шаблоне

 #define EXIT_ERR_RENAME_FAILED 4
 Не удалось переименовать файл

 Сборка:

 Клонирование репозитория:

 перейти в произвольный каталог к примеру /home/user

 cd /home/user
 git clone git://github.com/wellcomer/smv.git

 будет создан каталог /home/user/smv с исходными текстами

 для дальнейших обновлений можно использовать git pull:

 cd /home/user/smv
 git pull

 Простой вариант:

 Перейти в каталог с исходными текстами программы, выполнить: gcc main.c -DNDEBUG -o smv

 Сборка с помощью cmake:

 cd /home/user/smv
 cmake .
 make
