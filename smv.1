.\" Automatically generated by Pandoc 1.16.0.2
.\"
.TH smv 1 "Mar 10, 2017" "0.9" "smart mv"
.hy
.SH NAME
smart mv \- smart mv or sysadmin's mv.

.SH SYNOPSYS
.PP
\f[C]smv\ [\-d\ char|\-n|\-i|\-p|\-q|\-v|\-m\ flags|\-h\ helper]\ SOURCE_PATTERN\ DESTINATION_PATTERN\f[]

.SH DESCRIPTION
Rename files using helper.
Helper is a program that takes the name of a file and prints text to
stdout. Smv parses the helper stdout, fills variables and substitutes them in
the DESTINATION_PATTERN.
.PP
.nf
\f[C]
\fB\-d,\ \-\-delimiter\fR\ \ \ \ \ \ \ \ delimiter\ for\ destination_pattern\ (default\ is\ %)
\fB\-n,\ \-\-dry\-run\fR\ \ \ \ \ \ \ \ \ \ perform\ a\ trial\ run\ that\ does\ not\ make\ any\ changes
\fB\-h,\ \-\-helper\fR\ \ \ \ \ \ \ \ \ \ \ helper\ command\ and\ arguments
\fB\-i,\ \-\-ignore\-case\fR\ \ \ \ \ \ ignore\ case\ distinction\ in\ source_pattern
\fB\-m,\ \-\-mv\-flags\fR\ \ \ \ \ \ \ \ \ arguments\ to\ pass\ to\ stock\ mv
\fB\-p,\ \-\-make\-path\fR\ \ \ \ \ \ \ \ create\ destination\ path
\fB\-q,\ \-\-quiet\fR\ \ \ \ \ \ \ \ \ \ \ \ silent\ mode\ (does\ not\ print\ file\ names)
\fB\-v,\ \-\-verbose\fR\ \ \ \ \ \ \ \ \ \ verbose\ mode
\fB\-h,\ \-\-help\fR\ \ \ \ \ \ \ \ \ \ \ \ \ 

SOURCE_PATTERN can be a full file or directory name, and also include
shell wildcards (in this case the template must be escaped with quotes).
\f[]
.fi

.SH GENERAL
.PP
For each file that matches the SOURCE_PATTERN template, run the program
specified by the \fB\-\-helper\fR switch, give it the full path to
the file.
Read the first line from stdout of the helper, split into words, use a
space for separator.
Fill the array of variables with the values obtained.
In DESTINATION_PATTERN find the variables and replace them with values.
If the \fB\-\-make\-path\fR switch is specified create a output
directory (like a "mkdir\ \-p").
Run stock mv with the flags specified by the \fB\-\-mv\-flags\fR
switch.
.SH VARIABLES:
.PP
.nf
\f[C]
\fB%\@%\fR\ \-\ the\ first\ line\ of\ the\ helper\ stdout
\fB%~%\fR\ \-\ file\ directory
\fB%0%\fR\ \-\ file\ name\ with\ extension
\fB%$%\fR\ \-\ file\ extension
\fB%1%...%N%\fR\ \-\ word\ number
\fB%#%\fR\ \-\ the\ last\ word\ of\ the\ line

Example of variable values after running the helper md5sum with the file /tmp/hello.txt:

%\@%\ =\ c6c681709a7030b3670142592520e129\ /tmp/hello.txt\ (first\ line)
%~%\ =\ /tmp
%0%\ =\ hello.txt
%$%\ =\ .txt
%1%\ =\ c6c681709a7030b3670142592520e129\ (first\ word)
%2%\ =\ /tmp/hello.txt\ (the\ second\ word)
%#%\ =\ /tmp/hello.txt\ (the\ latter\ is\ also\ the\ second\ word)
\f[]
.fi
.SS Offset:
.PP
If you want to select a part of the value of a variable, you can specify
an offset after the comma: the first digit after the comma is the
starting position (counting goes from 1) the second is the length of
fragment.
.PP
Offset format: \f[C]%variable_name,start_pos,length%\f[]

Example:

.nf
\f[C]
%0,2,2%\ =\ el
%$,1,1%\ =\ .
\f[]
.fi
.SH EXAMPLES:
.PP
Moving a file (./test) to the yyyy/mm/dd directory, depending on the
file modification time:
.IP
\f[C]smv\ \-ph\ \[aq]stat\ \-c\ %y\[aq]\ ./test\ %1,1,4%/%1,6,2%/%1,9,2%/%0\f[]
.PP
Rename all files with the .txt extension to the md5 hash:
.IP
\f[C]smv\ \-h\ md5sum\ \[aq]*.txt\[aq]\ %1%$\f[]
.PP
Recursively rename all .txt files in /tmp to .dat:
.IP
\f[C]find\ /tmp\ \-name\ \[aq]*.txt\[aq]\ \-exec\ smv\ \-h\ \[aq]basename\ \-s\ .txt\[aq]\ {}\ %~%/%1%.dat\ \\;\f[]
.PP
Script sorting *.txt files by catalog yyyy/mm, depending on the file
modification time:
.IP
.nf
\f[C]
#!/bin/sh
wd=/home/samba/all\-msg/arc
/usr/local/bin/smv\ \-ph\ \[aq]stat\ \-c\ %y\[aq]\ $wd/\[aq]*.txt\[aq]\ $wd/%1,1,4%/%1,6,2%/%0
\f[]
.fi

.SH EXIT VALUES:
.nf
\f[C]
\ 0\ \-\ Success
\ 1\ \-\ Source\ file\ not\ found
\ 2\ \-\ Helper\ launch\ error
\ 3\ \-\ Errors\ in\ the\ DESTINATION_PATTERN
\ 4\ \-\ Could\ not\ rename\ file
\f[]
.fi
.SH AUTHOR
Written by Sergey Katunin.
.br
Send bug reports or comments to <sergey.blaster@gmail.com>

.SH COPYRIGHT
Copyright \(co 2017 Sergey Katunin.
.br
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
.br
This is free software: you are free to change and redistribute it.
.br
There is NO WARRANTY, to the extent permitted by law.

